/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 *
 * append_log.cc
 * 2024-04-23 15:28:24
 * Generated by rocket framework rocket_generator.py
 * File will not generate while exist
 * Allow editing
****************************************************/


#include <rocket/common/log.h>
#include "append_log.h"
#include "interface.h"
#include "../pb/raft_server.pb.h"

namespace raft_server {

AppendLogInterface::AppendLogInterface(const ::appendLogRequest* request, ::appendLogResponse* response, 
    rocket::RpcClosure* done, rocket::RpcController* controller)
  : Interface(dynamic_cast<const google::protobuf::Message*>(request), dynamic_cast<google::protobuf::Message*>(response), done, controller),
    m_request(request), 
    m_response(response) {
  APPINFOLOG("In|request:{%s}", request->ShortDebugString().c_str());
}

AppendLogInterface::~AppendLogInterface() {
  APPINFOLOG("Out|response:{%s}", m_response->ShortDebugString().c_str());
}

void AppendLogInterface::run() {

  //
  // Run your business logic at here
  // 

  m_response->set_ret_code(0);
  m_response->set_res_info("OK");

}

void AppendLogInterface::setError(int code, const std::string& err_info) {
  m_response->set_ret_code(code);
  m_response->set_res_info(err_info);
}

}